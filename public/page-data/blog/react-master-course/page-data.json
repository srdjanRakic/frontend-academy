{"componentChunkName":"component---src-templates-course-course-js","path":"/blog/react-master-course","result":{"data":{"markdownRemark":{"html":"<h2>Week 1</h2>\n<p>● Intro to ES2015\no “let” and “const”\no Arrow functions\no ES modules\no Classes\no Spread and rest operator\no Destructuring\no Reference vs Primitive types\no Map, filter and reduce\n● Intro to React and Single-Page Applications\no What React is (and isn’t)\no What are SPAs, difference between SPAs and MPAs\no Quick info about reconciliation and the Virtual DOM\n● React basics\no Create React App\no Basic React app folder structures\no Starting a React app and writing the first component\no What is JSX\no Functional vs class components</p>\n<h2>Week 2</h2>\n<p>● Component props\no What are component props in React\no Existing props\no Defining custom props on components\no Understanding the <code class=\"language-text\">children</code> prop\no The <code class=\"language-text\">className</code> prop\no Event handler props\n● Component state\no What is state in React\no Defining state in class components\no Manipulating state and state immutability, <code class=\"language-text\">setState</code> and its variations\no Difference between props and state and combining them\no Using the useState hook in functional components\no Updating state on events\no Handling user inputs</p>\n<h2>Week 3</h2>\n<p>● Conditional rendering\n● Working with lists\no Rendering lists in React</p>\n<p>o Lists and component state, updating state immutably\no The <code class=\"language-text\">key</code> prop\n● Styling React components\no Inline styles\no CSS stylesheets\no Using CSS Modules\no Intro to CSS-in-JS and styled-components</p>\n<h2>Week 4</h2>\n<p>● Styled-components\no Intro to styled-components\no Defining styled components\no Using styled components\no Passing down props to styled-components\no Conditional styling\no The <code class=\"language-text\">css</code> method\no Structuring styled-components\no Extending styles with styled-components\nWeek 5 – Workshop and mini project week\n● Workshop #1 – Debugging React applications\n● No lessons, mini project for the students to apply everything they’ve learned so\nfar</p>\n<h2>Week 6/7 – React deep-dive</h2>\n<p>● Improving the project structure\n● Component lifecycle\no Class component lifecycle overview\no Component creation lifecycle\no Component update lifecycle\no Component destruction lifecycle\no Component lifecycle best practices\no Optimizing class components with shouldComponentUpdate\no shouldComponentUpdate vs PureComponent\no Adding lifecycle methods to function components with useEffect\no Optimizing function components with React.memo()\n● Design patterns in React\no Higher-order components\no Render props\no Difference between HOCs and render props and their use cases\n● Refs\no Introduction to refs\no Using refs in class components with React.createRef()\no Using refs in function components with React.useRef()\no Forwarding refs</p>\n<p>● Context API\no Common problem in React – prop drilling\no Working with the Context API\no contextType and useContext()</p>\n<h2>Week 8</h2>\n<p>● Communicating with the web\no What are HTTP requests\no HTTP verbs, explained\no Javascript Promise API\no Async/await\no The Javascript ‘fetch’ module\no Making HTTP requests in React using fetch\no Parsing response data and using it in React\no HTTP error handling\no Intro to Axios\no Replacing fetch with Axios</p>\n<h2>Week 9</h2>\n<p>● Advanced Axios\no Axios interceptors – what are they, use cases\no Global Axios configuration\no Working with Axios instances\n● Routing in React apps\no MPA feel in SPA apps\no Intro to routing in React\no React Router\no Rendering Route components\no Navigating using links\no Route props\no Navigating using the ‘history’ prop\no Parsing query parameters from the ‘location’ prop\no Using <code class=\"language-text\">withRouter</code> to access Route props in non-Route components\no react-router hooks</p>\n<h2>Week 10</h2>\n<p>● Advanced routing\no Passing and extracting route parameters\no Using Switch to load a single Route\no Nested routes and dynamic nested routes\no Redirecting requests\no Conditional redirecting\no Using Guards\no Handling 404 case\no Lazy loading of Routes with React Suspense</p>\n<h2>Week 11</h2>\n<p>● Forms in React\no Handling user inputs\no Submitting forms\no Form validation\no Intro to Formik\no Using Formik for handling form state\n▪ The Formik Field component\n▪ Field props\n▪ Defining custom Field components\no Validation in Formik\no Introducing Yup for form validation\no withFormik HOC</p>\n<h2>Week 12 – Workshop and mini project week</h2>\n<p>● Workshop #2 – Functional programming for React developers (with React hooks)\n● No lessons, mini project for the students to apply everything they’ve learned so far</p>\n<h2>Week 13</h2>\n<p>● Intro to Redux\no Managing app state\no Immutability\no What is Redux\no Redux’s 3 principles\no Components of a Redux application\n▪ Store\n▪ Actions\n▪ Reducers\no Connecting a React app to Redux\no Updating the state immutably\no Using Immer.js\no Dispatching actions from React components\no Using selectors – the what, the why and the how\no Combining multiple reducers</p>\n<h2>Week 14</h2>\n<p>● Advanced Redux\no Introducing Redux Middleware\no Writing your own middleware\no Using a middleware to handle asynchronous actions\no Introduction to Redux-Thunk\no Handling asynchronous code with thunks\no Accessing the Redux state in a thunk\no Passing parameters to thunks\no Restructuring reducers with utility functions</p>\n<h2>Week 15</h2>\n<p>● Deep dive Redux – The Saga pattern\no Intro to ES6 generator functions\no What is a saga\no Brief intro to redux-saga\n▪ Declarative effects\n▪ Dispatching actions\n▪ Error handling\no Redux-saga/effects\n▪ takeEvery, takeLatest\n▪ call, put\n▪ select\no Connecting redux-saga to a React/Redux app\no Testing sagas</p>\n<h2>Week 16</h2>\n<p>● Workshop #3 – React Performance\nWeek 17/18/19/20 – Final project and presentation</p>","timeToRead":4,"frontmatter":{"title":"React Master Course","date":"09 Jan 2020","tags":["javascript","react","redux","nodejs"],"path":"blog/react-master-course","excerpt":"React Master Course","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='225'%3e%3cpath%20d='M0%20113v112h401V0H0v113m66-36c-3%203-3%206-3%2015l1%207-5%202c-11%203-15%2011-11%2017%202%203%2012%208%2014%208%201%200%202%202%201%209-1%2017%207%2020%2021%2010l5-4%204%203c5%205%2012%207%2015%206%206-2%207-7%206-21%200-2%200-2%205-4%207-3%2012-8%2012-12s-6-10-13-12l-5-2%201-6c2-12-2-19-10-18l-15%208c-1%201-2%201-4-1-7-7-15-9-19-5m2%203v17h6c4%200%205-1%208-5%204-5%204-5-3-10-5-3-9-4-11-2m32%201l-5%204-3%203%203%204c2%204%203%204%2010%205%204%201%205%201%206-7%201-9-4-13-11-9m50%207c-1%202-2%203-2%2025%200%2025%200%2027%206%2027%205%200%206-1%206-12v-9h8c9%200%2012%202%2012%209%200%209%204%2014%2010%2012%203-1%203-2%202-11-2-12-2-12-5-13l-2-2%202-1c9-5%208-20-2-24-6-3-31-3-35-1m183%204l-1%205c0%203%200%204-3%205-4%201-4%205%200%206h3v13c0%2017%201%2019%2011%2019%205%200%208-1%208-4%200-2-3-4-6-4h-2v-24h3l4-1c1-3%200-5-4-5-3%200-3%200-3-4%200-6-1-8-5-8-3%200-4%201-5%202m-173%2011l1%208%208-1c10%200%2012-1%2012-7-1-6-3-7-13-7h-8v7m-83%203l-3%207%203%205c4%208%205%208%2013%208h6l4-7%203-7-3-6-4-5-7-1h-8l-4%206m140-5c-6%201-7%201-11%204-9%209-8%2027%203%2033s32-1%2026-9c-2-3-3-3-7%201-5%203-12%203-15-1-5-6-4-6%209-6%2014%200%2016%200%2017-4%202-9-11-20-22-18m42%200c-8%201-14%208-11%2012%202%201%205%201%207-1%204-5%2015-5%2015%200%200%204-2%205-9%205-12%202-16%205-16%2013%200%2010%2013%2014%2023%207l3-2%201%203c1%202%207%203%209%201%201-1%200-31-2-33-2-4-11-6-20-5m44%200c-16%203-21%2029-6%2037%208%205%2021%202%2025-5%204-6-3-10-8-4-3%204-8%204-12%201s-4-15%200-19c4-3%208-3%2012%201%207%206%2013%201%207-6-4-4-10-6-18-5m-246%205c-10%205-9%2011%203%2015l6%202%202-5c2-5%202-5%200-10-3-6-4-6-11-2m53%202c-2%205-2%206%200%2010%202%206%203%206%2010%202%2010-5%209-10-1-15-7-3-7-3-9%203m-26%200c-3%203-3%207%201%2010%203%203%206%203%209%200s3-6%200-9c-3-4-7-4-10-1m131%201l-4%204c-2%204-1%204%2010%204%207%200%207-1%207-2-1-5-9-9-13-6m49%2015c-9%201-12%205-6%209%205%203%2013-2%2012-8v-2l-6%201m-196%206c-2%205-1%2014%201%2015%202%203%204%202%209-1%208-5%208-6%204-11-5-5-13-7-14-3m33-1c-3%200-9%206-9%209l10%208c7%203%2010-2%208-13-1-5-1-5-9-4'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.7777777777777777,"src":"/static/ca31f74a20da556b69057d20ff6abaf2/e9c7b/preview.png","srcSet":"/static/ca31f74a20da556b69057d20ff6abaf2/69781/preview.png 250w,\n/static/ca31f74a20da556b69057d20ff6abaf2/3fa08/preview.png 500w,\n/static/ca31f74a20da556b69057d20ff6abaf2/e9c7b/preview.png 1000w,\n/static/ca31f74a20da556b69057d20ff6abaf2/a4fe2/preview.png 1500w,\n/static/ca31f74a20da556b69057d20ff6abaf2/ec873/preview.png 1920w","sizes":"(max-width: 1000px) 100vw, 1000px"}}}}},"allMarkdownRemark":{"edges":[]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"postPath":"blog/react-master-course","translations":[{"hreflang":"en","path":"blog/react-master-course/"}]}}}